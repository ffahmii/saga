
package com.bank.services;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "NewWebService", targetNamespace = "http://services.bank.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NewWebService {


    /**
     * 
     * @param cardNumber
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isValid", targetNamespace = "http://services.bank.com/", className = "com.bank.services.IsValid")
    @ResponseWrapper(localName = "isValidResponse", targetNamespace = "http://services.bank.com/", className = "com.bank.services.IsValidResponse")
    @Action(input = "http://services.bank.com/NewWebService/isValidRequest", output = "http://services.bank.com/NewWebService/isValidResponse")
    public Boolean isValid(
        @WebParam(name = "cardNumber", targetNamespace = "")
        String cardNumber);

    /**
     * 
     * @param cardNumber
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAmount", targetNamespace = "http://services.bank.com/", className = "com.bank.services.GetAmount")
    @ResponseWrapper(localName = "getAmountResponse", targetNamespace = "http://services.bank.com/", className = "com.bank.services.GetAmountResponse")
    @Action(input = "http://services.bank.com/NewWebService/getAmountRequest", output = "http://services.bank.com/NewWebService/getAmountResponse")
    public double getAmount(
        @WebParam(name = "cardNumber", targetNamespace = "")
        String cardNumber);

    /**
     * 
     * @param cardNumber
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isExists", targetNamespace = "http://services.bank.com/", className = "com.bank.services.IsExists")
    @ResponseWrapper(localName = "isExistsResponse", targetNamespace = "http://services.bank.com/", className = "com.bank.services.IsExistsResponse")
    @Action(input = "http://services.bank.com/NewWebService/isExistsRequest", output = "http://services.bank.com/NewWebService/isExistsResponse")
    public Boolean isExists(
        @WebParam(name = "cardNumber", targetNamespace = "")
        String cardNumber);

    /**
     * 
     * @param amount
     * @param cardNumber
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "charge", targetNamespace = "http://services.bank.com/", className = "com.bank.services.Charge")
    @ResponseWrapper(localName = "chargeResponse", targetNamespace = "http://services.bank.com/", className = "com.bank.services.ChargeResponse")
    @Action(input = "http://services.bank.com/NewWebService/chargeRequest", output = "http://services.bank.com/NewWebService/chargeResponse")
    public int charge(
        @WebParam(name = "cardNumber", targetNamespace = "")
        String cardNumber,
        @WebParam(name = "amount", targetNamespace = "")
        double amount);

    /**
     * 
     * @return
     *     returns java.util.List<com.bank.services.CreditCard>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllCreditCard", targetNamespace = "http://services.bank.com/", className = "com.bank.services.GetAllCreditCard")
    @ResponseWrapper(localName = "getAllCreditCardResponse", targetNamespace = "http://services.bank.com/", className = "com.bank.services.GetAllCreditCardResponse")
    @Action(input = "http://services.bank.com/NewWebService/getAllCreditCardRequest", output = "http://services.bank.com/NewWebService/getAllCreditCardResponse")
    public List<CreditCard> getAllCreditCard();

}
